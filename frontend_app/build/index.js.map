{
  "version": 3,
  "sources": ["../src/socket.js", "../src/index.js"],
  "sourcesContent": ["\n\nconst socketCount = document.querySelector('#socket-count');\nconst clientId = document.querySelector('#socket-id');\n\nconst cheatBtn = document.querySelector('#cheatBtn');\nconst goodBtn = document.querySelector('#goodBtn');\n\nconst socket = io('https://c98b-99-209-52-138.ngrok-free.app', {\n  extraHeaders: {\n    \"ngrok-skip-browser-warning\": true\n  }\n});\n\n\nsocket.emit('/root/new_socket_connected');\n\n// Socket events\n// Whenever the server emits '/root/welcome' event, update website\nsocket.on('/root/welcome', welcomeUser);\n// // Whenever the server emits '/root/update_socket_count' event, updates number of sockets connected\nsocket.on('root/update_socket_count', updateSocketCount);\n// // Whenever the server emits '/root/update_chat' event, add message to the chat\n// socket.on('/root/update_chat', addMessage);\n\n/***********************************/\nfunction welcomeUser (data) {\n  const { message, sender, id } = data;\n  // addMessage({ message, sender });\n  clientId.innerHTML = id;\n}\n\nfunction updateSocketCount (data) {\n  const { clientCount } = data;\n  socketCount.innerHTML = clientCount;\n}\n\n// Sends a chat message to the server\nfunction sendCheat (e) {\n  e.preventDefault();\n  console.log(\"I cheated\")\n  socket.emit('/root/cheat');\n}\n\nfunction sendGood (e) {\n  e.preventDefault();\n  console.log(\"I did good\")\n  socket.emit('/root/good');\n}\n\n// Reactive elements > Event listeners\ncheatBtn.addEventListener('click', sendCheat);\ngoodBtn.addEventListener('click', sendGood);\n", "\n// Import CSS styles in JavaScript\nimport \"./socket.js\"\n// Initialize p5.js\n// p5 requires two arguments: new p5(sketch function, target DOM element)\n\n// Enable live reload while developing (https://esbuild.github.io/api/#live-reload)\nif (process.env.NODE_ENV !== 'production') {\n  new EventSource('/esbuild').addEventListener('change', () =>\n    location.reload(),\n  )\n}\n\nconsole.log(window.location.pathname)"],
  "mappings": "MAEA,IAAMA,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAW,SAAS,cAAc,YAAY,EAE9CC,EAAW,SAAS,cAAc,WAAW,EAC7CC,EAAU,SAAS,cAAc,UAAU,EAE3CC,EAAS,GAAG,4CAA6C,CAC7D,aAAc,CACZ,6BAA8B,EAChC,CACF,CAAC,EAGDA,EAAO,KAAK,4BAA4B,EAIxCA,EAAO,GAAG,gBAAiBC,CAAW,EAEtCD,EAAO,GAAG,2BAA4BE,CAAiB,EAKvD,SAASD,EAAaE,EAAM,CAC1B,GAAM,CAAE,QAAAC,EAAS,OAAAC,EAAQ,GAAAC,CAAG,EAAIH,EAEhCN,EAAS,UAAYS,CACvB,CAEA,SAASJ,EAAmBC,EAAM,CAChC,GAAM,CAAE,YAAAI,CAAY,EAAIJ,EACxBP,EAAY,UAAYW,CAC1B,CAGA,SAASC,EAAW,EAAG,CACrB,EAAE,eAAe,EACjB,QAAQ,IAAI,WAAW,EACvBR,EAAO,KAAK,aAAa,CAC3B,CAEA,SAASS,EAAU,EAAG,CACpB,EAAE,eAAe,EACjB,QAAQ,IAAI,YAAY,EACxBT,EAAO,KAAK,YAAY,CAC1B,CAGAF,EAAS,iBAAiB,QAASU,CAAS,EAC5CT,EAAQ,iBAAiB,QAASU,CAAQ,EC5CxC,IAAI,YAAY,UAAU,EAAE,iBAAiB,SAAU,IACrD,SAAS,OAAO,CAClB,EAGF,QAAQ,IAAI,OAAO,SAAS,QAAQ",
  "names": ["socketCount", "clientId", "cheatBtn", "goodBtn", "socket", "welcomeUser", "updateSocketCount", "data", "message", "sender", "id", "clientCount", "sendCheat", "sendGood"]
}
